<?php

/**
 * This is example code for a Drupal 6 to Drupal 7 migration. This won't actually
 * work without defining the referenced vocabularies, content types, and fields
 * on each side.
 */

/**
 * Implements hook_flush_caches().
 */
function cbib_migrate_flush_caches() {
  cbib_migrate_register_migrations();
}

/**
 * Register all migrations.
 *
 * @return void.
 */
function cbib_migrate_register_migrations() {
  // Define how we are getting the data for the migration. Legacy connector
  // from settings.php and 6 as major Drupal version.
  $common_arguments = array(
    'source_connection' => 'legacy',
    'source_version' => 6,
  );

  $migrations = cbib_migrate_get_all_migrations();

  // Register all the migrations.
  foreach ($migrations as $migration) {
    Migration::registerMigration($migration['class'], $migration['machine_name'], $common_arguments + $migration['arguments']);
  }
}

/**
 * Deregister all migrations.
 *
 * @return void.
 */
function cbib_migrate_deregister_migrations() {
  $migrations = cbib_migrate_get_all_migrations();

  // Deregister all the migrations.
  foreach ($migrations as $migration) {
    Migration::deregisterMigration($migration['machine_name']);
  }
}

/**
 * Get an array of all migrations. The returned migrations array
 * has the following keys:
 *   class: The name of the migration class.
 *   arguments: The arguments for the migration.
 *   machine_name: The machine name of the migration.
 *
 * @return Array of migrations as described above.
 */
function cbib_migrate_get_all_migrations() {
  $migrations = array();

  // Get migrations for users.
  $migrations  = cbib_migrate_get_user_migrations();

  // Get migrations for images (Billedefil/media -> Billede).
  $migrations += cbib_migrate_get_image_migrations();

  // Get migrations for central libraries (Centralbibliotek/library -> Centralbibliotek/centralbibliotek).
  $migrations += cbib_migrate_get_central_library_migrations();

  // Get migrations for user profiles.
  $migrations += cbib_migrate_get_profile_migrations();

  // Get migrations for groups (Gruppe/group -> Gruppe/group).
  $migrations += cbib_migrate_get_group_migrations();

  // Get migrations for events (Arrangement/event -> Begivenhed/event).
  $migrations += cbib_migrate_get_event_migrations();

  // Get migrations for documents (Gruppefil/group_file -> Dokument/document).
  $migrations += cbib_migrate_get_document_migrations();

  // Get migrations for posts (Gruppenyhed/group_news -> Indlæg/post).
  $migrations += cbib_migrate_get_post_migrations();

  // Get migrations for news items (Nyhed/newsitem -> Nyhed/news).
  $migrations += cbib_migrate_get_news_item_migrations();

  // Get migrations for pages (Tekstside/textpage -> Site/page).
  $migrations += cbib_migrate_get_page_migrations();

  return $migrations;
}

/**
 * Implements hook_migrate_api().
 */
function cbib_migrate_migrate_api() {
  $api = array(
    'api' => 2,
  );
  return $api;
}

/**
 * Get migrations for users and their profile nodes.
 *
 * @return Array containing the arguments of the migration ('arguments' array key)
 *   and the class that handles the migration ('class' array key).
 */
function cbib_migrate_get_user_migrations() {
  $migrations = array();

  $migrations[] = array(
    'machine_name' => 'role',
    'class' => 'DrupalRole6Migration',
    'arguments' => array(
      'group' => 'user',
      'description' => t('Mapping of roles from the old to the new site.'),
      'role_mappings' => array(
        'Biblioteksadmin' => 'content moderator',
      ),
    ),
  );

  $migrations[] = array(
    'machine_name' => 'user',
    'class' => 'DrupalUser6Migration',
    'arguments' => array(
      'group' => 'user',
      'description' => t('Migration of users from Centralbibliotek.dk'),
      'role_migration' => 'role',
    ),
  );

  return $migrations;
}

/**
 * Get migrations for images (Billedefil/media -> Billede).
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_image_migrations() {
  $migrations = array();

  $migrations[] = array(
    'machine_name' => 'file',
    'class' => 'DrupalFile6Migration',
    'arguments' => array(
      'group' => 'file',
      'description' => t('Migration of files from Centralbibliotek.dk'),
      'user_migration' => 'user',
    ),
  );

/*  $migrations[] = array(
    'arguments' => array(
      'description' => t('Migration of profile pictures from Centralbibliotek.dk'),
      'user_migration' => 'user',
    ),
    'class' => 'DrupalPicture6Migration',
    'machine_name' => 'picture',
  );
 */
  return $migrations;
}

/**
 * Get migrations for central libraries (Centralbibliotek/library -> Centralbibliotek/centralbibliotek).
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_central_library_migrations() {
  $migrations = array();

/*  $central_library_migration = array(
    'description' => t('Migration of central library nodes from Centralbibliotek.dk'),
    'machine_name' => 'central_library',
    'source_type' => 'library',
    'destination_type' => 'centralbibliotek',
    'user_migration' => 'user',
  );

  $migrations[] = array(
    'arguments' => $central_library_migration,
    'class' => 'CbibCentralLibraryMigration',
  );
 */
  return $migrations;
}

/**
 * Get migrations for profiles.
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_profile_migrations() {
  $migrations = array();

  return $migrations;
}

/**
 * Get migrations for groups (Gruppe/group -> Gruppe/group).
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_group_migrations() {
  $migrations = array();

  return $migrations;
}

/**
 * Get migrations for events (Arrangement/event -> Begivenhed/event).
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_event_migrations() {
  $migrations = array();

  return $migrations;
}

/**
 * Get migrations for documents (Gruppefil/group_file -> Dokument/document).
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_document_migrations() {
  $migrations = array();

  return $migrations;
}

/**
 * Get migrations for posts (Gruppenyhed/group_news -> Indlæg/post).
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_post_migrations() {
  $migrations = array();

  return $migrations;
}

/**
 * Get migrations for news items (Nyhed/newsitem -> Nyhed/news).
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_news_item_migrations() {
  $migrations = array();

  return $migrations;
}

/**
 * Get migrations for pages (Tekstside/textpage -> Site/page).
 *
 * @see cbib_migrate_get_user_migrations().
 */
function cbib_migrate_get_page_migrations() {

  $migrations = array();

  return $migrations;
}
