<?php
/**
 * @file
 * Code for the Cbib Features feature.
 */

include_once 'cbib_features.features.inc';

/**
 * Set the option to default for parent element.
 *
 * Implements hook_form_ctools_jump_menu_alter().
 */
function cbib_features_form_ctools_jump_menu_alter(&$form, &$form_state) {
  if (empty($form['jump']['#default_value'])) {
    $lookup_url = url($_GET['q']);
    // YH - Reload - local fix for menu default value.
    $lookup = explode('/', $lookup_url);
    if (empty($lookup[0])) {
      // remove first "/".
      unset($lookup[0]);
    }
    while (1 < count($lookup)) {
      // Remove last "/" element.
      unset($lookup[count($lookup)]);
      $lookup_url = url(implode('/', $lookup));
      foreach ($form['jump']['#options'] as $path => $title) {
        if (strpos($path, $lookup_url)) {
          $default_value = $path;
          break 2;
        }
      }
    }
    if (!empty($default_value)) {
      $form['jump']['#default_value'] = $default_value;
    }
  }

  $new_options = array();
  $source = drupal_get_normal_path(request_path());
  if (preg_match('@^node/\d+/(news|events|groups)$@', $source, $matches)) {
    foreach ($form['jump']['#options'] as $path => $title) {
      if ($path) {
        // dpm($path);
        list($key, $new_path) = explode('::', $path);
        $new_path = drupal_get_normal_path(trim($new_path, '/'));
        $new_path = url($new_path . '/' . $matches[1]);
        //dpm($new_path, $path);
        if ($form['jump']['#default_value'] === $path) {
          $form['jump']['#default_value'] = $new_path;
        }
        $path = $new_path;
      }
      $new_options[$path] = $title;
    }
    $form['jump']['#options'] = $new_options;
  }
}
