<?php
/**
 * @file
 * This module adds mapping targets for all fields in referenced entities.
 */

/**
 * Implements hook_feeds_processor_targets_alter().
 *
 * @see FeedsNodeProcessor::getMappingTargets()
 */
function feeds_entityreference_field_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
  foreach (field_info_instances($entity_type, $bundle_name) as $name => $instance) {
    $info = field_info_field($name);
    if ($info['type'] == 'entityreference') {
      // Load field instances from the target entity+bundle.
      $target_type = $info['settings']['target_type'];
      $target_bundles = $info['settings']['handler_settings']['target_bundles'];

      $instances = field_info_instances($target_type);
      if ($target_bundles) {
        foreach ($instances as $target_bundle => $target_instance) {
          if (empty($target_bundles[$target_bundle])) {
            unset($instances[$target_bundle]);
          }
        }
      }

      // For each field instance in the target bundle, provide a mapping.
      foreach ($instances as $target_bundle => $target_instance) {
        foreach ($target_instance as $field_name => $field_instances) {
          $field_info = field_info_field($field_name);
          foreach (array_keys($field_info['columns']) as $column_name) {
            $tname = "$name:field:$target_type:$target_bundle:$field_name:$column_name";
            $targets[$tname] = array(
              'name' => check_plain($instance['label'] . t(' (Entity reference by field @field:@column)', array(
                  '@field' => $field_name,
                  '@column' => $column_name,
                ))),
              'callback' => 'feeds_entityreference_field_feeds_set_target',
              'description' => t('The field instance @label of @id matched by @field:@column.', array(
                '@label' => $instance['label'],
                '@id' => $tname,
                '@field' => $field_name,
                '@column' => $column_name,
              )),
            );
          }
        }
      }
    }
  }
}

/**
 * Entity reference callback for mapping.
 *
 * When the callback is invoked, $target contains the name of the field the
 * user has decided to map to and $value contains the value of the feed item
 * element the user has picked as a source.
 *
 * @param object $source
 *   A FeedsSource object.
 * @param string $entity
 *   The entity to map to.
 * @param string $target
 *   The target key on $entity to map to.
 * @param array $value
 *   The value to map. MUST be an array.
 */
function feeds_entityreference_field_feeds_set_target($source, $entity, $target, $value) {

  // Don't do anything if we weren't given any data.
  if (empty($value)) {
    return;
  }

  // Assume that the passed in value could really be any number of values.
  if (is_array($value)) {
    $values = $value;
  }
  else {
    $values = array($value);
  }

  // Determine the field we are matching against.
  if (preg_match('/^(.*):field:(.*):(.*):(.*):(.*)$/', $target, $matches)) {
    list(,$target, $target_type, $target_bundle, $target_field, $target_column) = $matches;
  }
  else {
    return FALSE;
  }

  // Set the language of the field depending on the mapping.
  $language = isset($mapping['language']) ? $mapping['language'] : LANGUAGE_NONE;

  // Iterate over all values.
  $iterator = 0;
  $field = isset($entity->$target) ? $entity->$target : array();
  foreach ($values as $value) {
    // Only process if this value was set for this instance.
    if ($value) {
      $query = new EntityFieldQuery();
      $query->entityCondition('entity_type', $target_type)
        ->entityCondition('bundle', $target_bundle)
        ->fieldCondition($target_field, $target_column, $value, '=');
      $result = $query->execute();
      foreach ($result[$target_type] as $target_entity) {
        $wrapper = entity_metadata_wrapper($target_type, $target_entity);
        $field[$language][$iterator]['target_id']   = $wrapper->getIdentifier();
        // Break out of the loop if this field is single-valued.
        if ($info['cardinality'] == 1) {
          break 2;
        }
        $iterator++;
      }
    }

    // Break out of the loop if this field is single-valued.
    if ($info['cardinality'] == 1) {
      break;
    }
    $iterator++;
  }

  // Add the field to the entity definition.
  $entity->{$target} = $field;
}
